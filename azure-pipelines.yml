resources:
  repositories:
  - repository: self
    type: git
    ref: main
jobs:
- job: bumpPatchVersion
  displayName: Auto bump Patch Version
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
    displayName: Checkout repository
    persistCredentials: true

  - pwsh: |-
        # Write your commands here
        $previousVersion = git for-each-ref --sort=-creatordate --format '%(tag)' refs/tags | Select-Object -First 1
        $semVerRegex = [regex]::new('^(?<major>0|[1-9]\d*)\.(?<minor>0|[1-9]\d*)\.(?<patch>0|[1-9]\d*)(?:-(?<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?<metadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$')
        $previousVersionMatch = $semVerRegex.Match($PreviousVersion)
        $previousMajor = [int]$previousVersionMatch.Groups['major'].Value
        $previousMinor = [int]$previousVersionMatch.Groups['minor'].Value
        $previousPatch = [int]$previousVersionMatch.Groups['patch'].Value
        $previousPrerelease = $previousVersionMatch.Groups['prerelease'].Value
        $previousMetadata = $previousVersionMatch.Groups['metadata'].Value
        $newPatch= $previousPatch+1
        git config user.name "SrikanthPandanaboina"
        #git config user.email srikanth.pandanaboina39@gmail.com
        $newVersion="$($previousMajor).$($previousMinor).$($newPatch)"
        echo New Version: $newVersion
        #git tag --annotate $newVersion --message 'My version'
        git push origin --tags

  # - task: GitVersion@5
  #   displayName: GitVersion
  - task: GitHubRelease@1
    displayName: GitHub release (create)
    inputs:
      gitHubConnection: d40ecbeb-33bd-451f-84d2-2c5ca69ffd37
...
